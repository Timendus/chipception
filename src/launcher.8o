:const SUPERCHIP 1
:const FONTLIB-NOWRAP 1
:include "text/font-header.8o"

: main
	setFont font-5-pix-narrow

	i := rom-table
	load v0
	vA := v0   # Total number of items
	vD := 0    # Selected item

	loop
		clear
		vB := 0    # Start item for render
		vC := 1    # Y coordinate of start item

		# Render the items that fit on screen
		loop
			while vA != vB
			v2 := vB
			find-program
			render-program
			if vD == vB then highlight
			vB += 1
			vC += 10
			if vC != 41 then
		again

		render-scrollbar

		# Wait for user input
		v0 := key
		if v0 == 5 begin
			if vD != 0 then vD -= 1
		end
		if v0 == 8 begin
			if vD != vA then vD += 1
		end

		# Wait for key release
: main-key-wait-loop
		v0 := 5
		if v0 key then jump main-key-wait-loop
		v0 := 8
		if v0 key then jump main-key-wait-loop
	again

# v2 is the index of a program, get a pointer to the start in i and v0, v1
# Destroys: i, v0, v1, v2, v3, v4
: find-program
	i := rom-table
	:alias unpack-hi v3
    :alias unpack-lo v4
	:unpack 0xA rom-table
	vF := 1
	i += vF
	v4 += vF
	v3 += vF
	loop
		while v2 != 0
		v2 -= 1
		# An entry is 2 + 8 + string length bytes long
		# So first just add 10 bytes to jump over the pointer and icon
		vF := 10
		i += vF
		v4 += vF
		v3 += vF
		# Then, find the end of the string (which should be fontlib-str-end)
		v0 := 0x00
		loop
			while v0 != fontlib-str-end
			load v0
			vF := 1
			i += vF
			v4 += vF
			v3 += vF
		again
		# We're now pointing to the next entry
	again
	v0 := v3
	v1 := v4
	return

# v0, v1 and i both point to a program description table
# Render that program at Y = vC
: render-program
	v2 := 2

	# Render icon
	vF := 2
	i += vF
	sprite v2 vC 8

	# Render name
	vF := 10
	v1 += vF
	v0 += vF
	v2 += 10
	v3 := vC
	v3 += 2
	v4 := 58
	v5 := vC
	v5 += 7
	jump fontlib-draw-text

# Draw a highlight at Y = vC
: highlight
	v2 := 0
	v3 := vC
	v3 -= 1
	i := highlight-sprite
	loop
		while v2 != 60
		sprite v2 v3 0
		v2 += 10
	again
	return

# Draw the scrollbar at proportion "vD / (vA + 1)"
# Destroys: v0 - v3
: render-scrollbar
	i := scrollbar-line
	v0 := 60
	v1 := 0
	loop
		while v1 != 32
		sprite v0 v1 8
		v1 += 8
	again
	v1 := vD
	v2 := 0
	v3 := vA
	v3 += 1

	# v2, v1 = vD * 32
	v1 <<= v1
	v2 += vF
	v1 <<= v1
	v2 += vF
	v1 <<= v1
	v2 += vF
	v1 <<= v1
	v2 += vF
	v1 <<= v1
	v2 += vF

	# v1 = v2, v1 / (vA + 1)
	v4 := 8
	v5 := 0
	loop
		while v4 != 0
		v4 -= 1
		v2 <<= v2
		v1 <<= v1
		v2 |= vF
		v1 |= v5
		v5 := 0
		if v2 > v3 begin
			v2 -= v3
			v5 := 1
		end
	again

	i := scrollbar-handle
	sprite v0 v1 8
	return


:include "text/font-library.8o"
:include "text/font-5-pix-narrow.8o"

:segment data

: highlight-sprite
	0xFF 0xC0
	0xFF 0xC0
	0xFF 0xC0
	0xFF 0xC0
	0xFF 0xC0
	0xFF 0xC0
	0xFF 0xC0
	0xFF 0xC0
	0xFF 0xC0
	0xFF 0xC0
	0x00 0x00
	0x00 0x00
	0x00 0x00
	0x00 0x00
	0x00 0x00
	0x00 0x00

: scrollbar-line
	0b01000000
	0b01000000
	0b01000000
	0b01000000
	0b01000000
	0b01000000
	0b01000000
	0b01000000

: scrollbar-handle
	0b00100000
	0b01010000
	0b01010000
	0b01010000
	0b01010000
	0b01010000
	0b01010000
	0b00100000

: rom-table
